C51 COMPILER V9.00   ULTRASOUND                                                            05/23/2016 20:22:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ULTRASOUND
OBJECT MODULE PLACED IN UltraSound.OBJ
COMPILER INVOKED BY: E:\software\DevelopmentSoftware\InstallSrc\KeilC51\C51\BIN\C51.EXE UltraSound.c COMPACT BROWSE DEBU
                    -G OBJECTEXTEND

line level    source

   1          #include "stc15.h"
   2          //#include "UART.h"
   3          #include "Timer.h"
   4          #include "Delay.h"
   5          #include "LCD12864.h"
   6          #include "main.h"
   7          
   8          sbit trig=P1^0; //触发输入 至少为10us以上
   9          sbit echo=P1^1; //输出回响信号
  10          
  11          unsigned long RawTime;
  12          signed int RealDistance;
  13          
  14          #define FOSC_FENZHIYI 9.0422e-5                 //先乘1000,下面直接当成毫秒
  15          
  16          char bat[7]; //保存超声波测量的数据，单位为m    //1个操作9.0422e-8   1000个e-5    RawTime*FOSC_FENZHIYI s
  17          void delay(unsigned int i)
  18          {
  19   1              while(i--);
  20   1      }
  21          
  22          void UltraSoundInit()
  23          {
  24   1              Timer1Init();
  25   1      }
  26          
  27          void super_start()      //触发超声波开始工作
  28          {
  29   1              trig=1;
  30   1              delay(10);       //至少10us
  31   1              trig=0; 
  32   1      }
  33          signed int super_count()          //计算超声波回响的高电平持续时间,直接取出TH1和额TL1            0-25m/s
  34          {
  35   1          RawTime=65536*T1times+TH1*256+TL1;
  36   1              RealDistance=(RawTime*FOSC_FENZHIYI*170);   //精确到mm                                                           3m         1/11059200 s  假设1m 则t=2m/340
             -m/s  
  37   1                                                                                                                                                                       //0-4000          pp *          9.0422e-8 s * 170m/s = 4000mm
  38   1              //bat[0]=RealDistance/1000 + 48;
  39   1              //bat[1]=(unsigned char)('.');
  40   1              //bat[2]=RealDistance%1000/100 + 48;
  41   1              //bat[3]=RealDistance%100/10 + 48;
  42   1              //bat[4]=RealDistance%10 + 48;
  43   1              //bat[5]=(unsigned char)('m');
  44   1              //bat[6]=(unsigned char)('m');
  45   1              //bat[7]='\0';
  46   1              return RealDistance;
  47   1      }
  48          
  49          signed int DisUltraSound()
  50          {
  51   1          signed int t;
  52   1              super_start();
  53   1              while(echo==0);   //等待高电平
C51 COMPILER V9.00   ULTRASOUND                                                            05/23/2016 20:22:31 PAGE 2   

  54   1              EnableTimer1();   //打开定时器1开始计时
  55   1              while(echo==1);   //等待高电平下去变成低电平（高电平持续）
  56   1              DisableTimer1();  //关闭定时器1
  57   1              t=super_count();
  58   1              return t;
  59   1      }
  60          
  61          void UltraSoundDisplay()
  62          {     
  63   1          //unsigned char bat1[8]={0,0,0,0,0,0};
  64   1              //unsigned char bat2[8]={0,0,0,0,0,0};
  65   1              //unsigned char bat3[10]={'+',0,'.',0,0,0,'m','/','s','\0'};
  66   1                
  67   1              unsigned char VelocityData[] = {"速度为000000000"};
  68   1              unsigned long Dis1,Dis2,DDis;
  69   1              unsigned char i;
  70   1      
  71   1              //for(i=0;i<5;i++)
  72   1          //{
  73   1              //      Delay10ms();
  74   1              //}
  75   1          Dis1=DisUltraSound();                 //超声波模块测距
  76   1          for(i=0;i<5;i++)
  77   1              {
  78   2                      Delay50ms();
  79   2              }
  80   1          Dis2=DisUltraSound();                 //超声波模块测距
  81   1      
  82   1          if(Dis1>4000 || Dis2>4000)                                                            //单位mm
  83   1              {
  84   2                      VelocityData[7] = 'N';
  85   2                      VelocityData[8] = '/';
  86   2                      VelocityData[9] = 'A';
  87   2                      VelocityData[10] = 'N';
  88   2                      VelocityData[11] = '/';
  89   2                      VelocityData[12] = 'A';
  90   2                      VelocityData[13] = 'N';
  91   2                      VelocityData[14] = 'A';
  92   2                      VelocityData[15]='\0';
  93   2      
  94   2                      Display_String(1,VelocityData);
  95   2              }
  96   1              else
  97   1              {
  98   2              //bat1[0]=Dis1/10000 + 48;
  99   2              //bat1[1]=Dis1%10000/1000 + 48;
 100   2              /*bat1[0]=Dis1%10000/1000 + 48;
 101   2              bat1[1]=(unsigned char)('.');                                                           
 102   2              bat1[2]=Dis1%1000/100 + 48;
 103   2              bat1[3]=Dis1%100/10 + 48;
 104   2              bat1[4]=Dis1%10 + 48;
 105   2              bat1[5]=(unsigned char)('m');
 106   2              bat1[6]='\0';
 107   2          Display_String(2,bat1);
 108   2      
 109   2          Delay1ms();
 110   2                                                                                                                                               
 111   2              bat2[0]=Dis2%10000/1000 + 48;
 112   2              bat2[1]=(unsigned char)('.');                                                           
 113   2              bat2[2]=Dis2%1000/100 + 48;
 114   2              bat2[3]=Dis2%100/10 + 48;
 115   2              bat2[4]=Dis2%10 + 48;
C51 COMPILER V9.00   ULTRASOUND                                                            05/23/2016 20:22:31 PAGE 3   

 116   2              bat2[5]=(unsigned char)('m');
 117   2              bat2[6]='\0';
 118   2              Display_String(3,bat2);
 119   2      
 120   2          Delay1ms();*/
 121   2      
 122   2              if(Dis1>Dis2)
 123   2                      {
 124   3                              DDis=Dis1-Dis2;
 125   3                              VelocityData[6] = '+';
 126   3                      }
 127   2                      else
 128   2                      {
 129   3                              DDis=Dis2-Dis1;
 130   3                              VelocityData[6] = '-';
 131   3                      }
 132   2                                                                                                                         //单位mm  时间 50ms      4000mm/50ms  ->  4000*20=80m/s
 133   2                      DDis*=4;
 134   2              
 135   2                      VelocityData[7]=DDis%10000/1000 + 48;
 136   2                      VelocityData[8]=(unsigned char)('.');                                                   
 137   2                      VelocityData[9]=DDis%1000/100 + 48;
 138   2                      VelocityData[10]=DDis%100/10 + 48;
 139   2                      VelocityData[11]=DDis%10 + 48;
 140   2                      VelocityData[12]=(unsigned char)('m');
 141   2                      VelocityData[13]=(unsigned char)('/');
 142   2                      VelocityData[14]=(unsigned char)('s');
 143   2                      VelocityData[15]='\0';
 144   2      
 145   2                      Display_String(1,VelocityData);
 146   2                      if(DDis%10000/1000>0)                                               //超过1m/s
 147   2                      {
 148   3                              FASTSPEED = 1;
 149   3                              //P20 = !P20;                                      
 150   3                      }
 151   2              }       
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    753    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     13      29
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
