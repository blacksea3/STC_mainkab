C51 COMPILER V9.00   TIMER                                                                 06/03/2016 19:01:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN Timer.OBJ
COMPILER INVOKED BY: E:\software\DevelopmentSoftware\InstallSrc\KeilC51\C51\BIN\C51.EXE Timer.c LARGE BROWSE DEBUG OBJEC
                    -TEXTEND

line level    source

   1          #include "stc15.h"
   2          //#include "Temperature.h"
   3          //#include "UART.h"
   4          //#include "DHT11.h"
   5          #include "Buzzer.h"
   6          //#include "UltraSound.h"
   7          #include "main.h"
   8          
   9          #define TFOSC 11059200L
  10          #define TIMS (65536-TFOSC/1000)                 //1T模式,1ms
  11          #define TIMS50US (65536-TFOSC/20000)    //1T模式,100us
  12          
  13          unsigned int T0times0;          //定时器0中断次数0
  14          unsigned int T0times1;          //定时器0中断次数1
  15          unsigned int T0times2;          //定时器0中断次数2
  16          unsigned int T0times3;          //定时器0中断次数3
  17          unsigned int T1times;           //定时器1中断次数
  18          unsigned int T3times;           //定时器3中断次数
  19          unsigned int T4times;           //定时器4中断次数
  20          unsigned int T3TimesValue;      //定时器3中断阈值
  21          
  22          //固定定时器Timer0
  23          void Timer0Init(void)           //1毫秒@11.0592MHz
  24          {
  25   1              AUXR |= 0x80;               //定时器0时钟1T模式
  26   1              TMOD &= 0xfc;                   //设置定时器0 16位自动重装载
  27   1              TL0 = TIMS;                             //设置定时初值
  28   1              TH0 = TIMS>>8;                  //设置定时初值
  29   1              PT0 = 0;                //Timer0低优先级
  30   1              TR0 = 1;                        //定时器0开始计时
  31   1              ET0 = 1;                //使能定时器0中断
  32   1              T0times0 = 0;
  33   1              T0times1 = 0;
  34   1      }
  35          
  36          void EnableTimer0()
  37          {
  38   1              TL0 = TIMS;                                                                     //设置定时初值
  39   1              TH0 = TIMS>>8;                                                  //设置定时初值
  40   1              TR0 = 1;                                                                //定时器0开始计时
  41   1              ET0 = 1;                                                        //使能定时器0中断
  42   1              T0times0 = 0;
  43   1              T0times1 = 0;
  44   1      }
  45          
  46          void DisableTimer0()
  47          {
  48   1              TR0 = 0;                        //定时器0停止计时
  49   1              ET0 = 0;                //关闭定时器0中断       
  50   1      }
  51          
  52          //Timer0中断函数
  53          void Timer0_ISR() interrupt 1                               
  54          {
C51 COMPILER V9.00   TIMER                                                                 06/03/2016 19:01:29 PAGE 2   

  55   1          //EA = 0;
  56   1              if(T0times0<2000)                                                       //2s间隔 DHT11
  57   1              {
  58   2                  T0times0++;
  59   2              }
  60   1              else
  61   1              {
  62   2                  T0times0=0;
  63   2                      DHT11ISREADY = 1;       
  64   2              }
  65   1      
  66   1              if(T0times1<500)                                                        //0.5s间隔 UltraSound
  67   1              {
  68   2                  T0times1++;
  69   2              }
  70   1              else
  71   1              {
  72   2                      T0times1=0;
  73   2                      ULTRAISREADY = 1;
  74   2              }
  75   1      
  76   1              if(T0times2<1000)                                                       //1s间隔 DS3231
  77   1              {
  78   2                  T0times2++;
  79   2              }
  80   1              else
  81   1              {
  82   2                  T0times2=0;
  83   2                      DS3231ISREADY = 1;
  84   2              }
  85   1              
  86   1              if(T0times3<3200)                                                       //3.2s间隔 MQ-135
  87   1              {
  88   2                  T0times3++;
  89   2              }
  90   1              else
  91   1              {
  92   2                  T0times3=0;
  93   2                  ADCSTARTREADY = 1;
  94   2              }
  95   1      
  96   1              //EA = 1;
  97   1      }
  98          
  99          //计时定时器Timer1
 100          void Timer1Init(void)           //@11.0592MHz           340m/s  4m       340t=2x    x<=4m    t=x/170<=0.02352941s   65535*1/110
             -59200
 101          {                                                                                   //有溢出的可能性,需要添加中断次数变量T1Times
 102   1              AUXR |= 0x40;                                   //定时器1时钟1T模式
 103   1              TMOD &= 0xf3;                                                           //设置定时器1 16位自动重装载
 104   1              PT1 = 0;                                                                        //定时器1低优先级
 105   1              TR1 = 0;                                                                //定时器1停止计时
 106   1              ET1 = 0;                                                        //关闭定时器1中断
 107   1      }
 108          
 109          void EnableTimer1()
 110          {
 111   1              TL1 = 0;                                                                        //设置定时初值
 112   1              TH1 = 0>>8;                                                             //设置定时初值
 113   1              TR1 = 1;                                                                //定时器1开始计时
 114   1              ET1 = 1;                                                        //使能定时器1中断
 115   1              T1times = 0;
C51 COMPILER V9.00   TIMER                                                                 06/03/2016 19:01:29 PAGE 3   

 116   1      }
 117          
 118          void DisableTimer1()
 119          {
 120   1              TR1 = 0;                        //定时器1停止计时
 121   1              ET1 = 0;                //关闭定时器1中断       
 122   1      }
 123          
 124          //Timer1中断函数
 125          void Timer1_ISR() interrupt 3                           //由于发送数据使用串口中断,尽量避免在别的中断里直接发数据
 126          {
 127   1          //EA = 0;
 128   1              if(T1times<1000)
 129   1              {       
 130   2                      T1times++;
 131   2              }
 132   1              else
 133   1              {
 134   2                      T1times=0;
 135   2              }
 136   1              //EA = 1;
 137   1              if(T1times == 4)
 138   1              {
 139   2                      ;
 140   2                      //SendData('?');
 141   2              }
 142   1      }
 143          
 144          //可变定时器Timer3
 145          void Timer3Init(void)           //1毫秒@11.0592MHz
 146          {
 147   1              T4T3M &= 0xfb;              //定时器3内部系统时钟
 148   1              T4T3M |= 0x02;          //定时器3 1T模式
 149   1              T4T3M &= 0xf7;              //定时器3停止计时
 150   1              IE2 &= 0xdf;            //关闭定时器3中断
 151   1      }
 152          
 153          void EnableTimer3()
 154          {
 155   1              T4T3M |= 0x08;              //定时器3开始计时
 156   1              IE2 |= 0x20;            //开启定时器3中断
 157   1              T3L = TIMS;                             //设置定时初值
 158   1              T3H = TIMS>>8;                  //设置定时初值
 159   1              T3times = 0;
 160   1              T3TimesValue = 400;
 161   1      }
 162          
 163          void DisableTimer3()
 164          {
 165   1              T4T3M &= 0xf7;              //定时器3停止计时
 166   1              IE2 &= 0xdf;            //关闭定时器3中断
 167   1              P44 = 1;                                //有源蜂鸣器
 168   1              P54 = 1;                                //有源蜂鸣器
 169   1              P55 = 1;                                //有源蜂鸣器
 170   1      }
 171          
 172          //Timer3中断函数
 173          void Timer3_ISR() interrupt 19                          //由于发送数据使用串口中断,尽量避免在别的中断里直接发数据
 174          {
 175   1          EA = 0;
 176   1              if(T3times<T3TimesValue)
 177   1              {       
C51 COMPILER V9.00   TIMER                                                                 06/03/2016 19:01:29 PAGE 4   

 178   2                  Buzzer();                                                           //蜂鸣器
 179   2                      T3times++;
 180   2              }
 181   1              else
 182   1              {
 183   2                  FASTSPEED = 0;                                              
 184   2                  BUZZERTIMER3STOP = 1;
 185   2                      T3times=0;
 186   2              }
 187   1              EA = 1;
 188   1      }
 189          
 190          //可变定时器Timer4
 191          void Timer4Init(void)           //100微秒@11.0592MHz
 192          {
 193   1              T4T3M &= 0xbf;              //定时器4内部系统时钟
 194   1              T4T3M |= 0x20;          //定时器4 1T模式
 195   1              T4L = TIMS;                             //设置定时初值
 196   1              T4H = TIMS>>8;                  //设置定时初值
 197   1              T4T3M &= 0x7f;              //定时器4停止计时
 198   1              IE2 &= 0xbf;            //关闭定时器4中断
 199   1      }
 200          
 201          void EnableTimer4()
 202          {
 203   1              T4T3M |= 0x80;              //定时器4开始计时
 204   1              IE2 |= 0x40;            //开启定时器4中断
 205   1              T4L = 0;                                //设置定时初值
 206   1              T4H = 0>>8;                         //设置定时初值
 207   1              T4times = 0;
 208   1      }
 209          
 210          void DisableTimer4()
 211          {
 212   1              T4T3M &= 0x7f;              //定时器4停止计时
 213   1              IE2 &= 0xbf;            //关闭定时器4中断       
 214   1      }
 215          
 216          void RefreshTimer4()
 217          {
 218   1              T4times = 0;
 219   1      }
 220          
 221          //Timer4中断函数
 222          void Timer4_ISR() interrupt 20                          //由于发送数据使用串口中断,尽量避免在别的中断里直接发数据
 223          {
 224   1          //EA = 0;
 225   1              if(T4times<1000)
 226   1              {       
 227   2                      T4times++;
 228   2              }
 229   1              else
 230   1              {
 231   2                      T4times=0;
 232   2                      DisableTimer4();
 233   2                      //WIFINEEDDELAY = 0;
 234   2                      P20 = !P20;
 235   2                      //SendString("ABCDE");
 236   2                      //ReadTemperature();                    //读取温度湿度传感器值
 237   2                      //ReadAir();                            //读取空气传感器值
 238   2                      //WifiSend();                           //Wifi发送数据
 239   2              }
C51 COMPILER V9.00   TIMER                                                                 06/03/2016 19:01:29 PAGE 5   

 240   1              //EA = 1;
 241   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    607    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
