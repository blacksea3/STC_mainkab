C51 COMPILER V9.00   DS1302                                                                05/22/2016 16:17:24 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: E:\software\DevelopmentSoftware\InstallSrc\KeilC51\C51\BIN\C51.EXE DS1302.C COMPACT BROWSE DEBUG OB
                    -JECTEXTEND

line level    source

   1          /****************《51单片机轻松入门-基于STC15W4K系列》配套例程 *************
   2           ★★★★★★★★★★★★★★★★★★★★★★★★
   3           《51单片机轻松入门-基于STC15W4K系列》 一书已经由北航出版社正式出版发行。
   4            作者亲手创作的与教材配套的51双核实验板(2个MCU)对程序下载、调试、仿真方便，不需要外部
   5            仿真器与编程器，这种设计方式彻底解决了系统中多个最高优先级谁也不能让谁的中断竞争问题。
   6            淘宝店地址：https://shop117387413.taobao.com
   7            QQ群：STC51-STM32(3) ：515624099 或 STC51-STM32(2)：99794374。
   8                  验证信息：STC15单片机
   9            邮箱：xgliyouquan@126.com
  10            ★★★★★★★★★★★★★★★★★★★★★★★★*/
  11          
  12          #include "stc15.h" 
  13          #include "LCD12864.h"
  14          
  15          #include <intrins.h> 
  16          
  17          sbit SCK = P2^7;                   // 时钟      
  18          sbit SDA = P4^5;                   // 数据      
  19          sbit RST = P4^6;               // DS1302复位(片选)
  20          #define DS1302_W_ADDR 0x80         // 写起始地址
  21          #define DS1302_R_ADDR 0x81         // 读起始地址
  22          
  23          /*
  24           * 时间格式化，
  25           * 参数:StartTime[7]7位数组,待格式化,time8位数组格式化后的数据
  26           */
  27          void Data_Swap(unsigned char StartTime[7],unsigned char time[8])             // 数据交换
  28          {
  29   1              time[0]=StartTime[5];    // 秒
  30   1              time[1]=StartTime[4];    // 分
  31   1              time[2]=StartTime[3];    // 时
  32   1              time[3]=StartTime[2];    // 日
  33   1              time[4]=StartTime[1];    // 月
  34   1              time[5]=StartTime[6];    // 周
  35   1              time[6]=StartTime[0];    // 年
  36   1              time[7]=0;                               // 最后一字节写保护为0可写入数据
  37   1      }
  38          
  39          // 写字节，低位在前，高位在后   
  40          void write_ds1302_byte(unsigned char dat) 
  41          {
  42   1              unsigned char i;
  43   1              for (i=0;i<8;i++) 
  44   1              { 
  45   2                      SDA = dat & 0x01;  // bit型变量取值范围是0和1,赋值非0结果为1
  46   2                      SCK = 1;                   // 放入数据到时钟上升沿时间 50nS
  47   2                      dat >>= 1;                 // 时钟上升沿后数据保持时间 70nS
  48   2                      SCK = 0;                   // 时钟低电平时间与时钟高电平时间250nS
  49   2              }
  50   1      }  
  51          // 清除写保护
  52          void clear_ds1302_WP(void) 
  53          {
  54   1              RST = 0;           // RST引脚既是CE引脚
C51 COMPILER V9.00   DS1302                                                                05/22/2016 16:17:24 PAGE 2   

  55   1              SCK = 0;
  56   1              RST = 1;
  57   1              write_ds1302_byte(0x8E);
  58   1              write_ds1302_byte(0);
  59   1              SDA = 0;
  60   1              RST = 0;
  61   1      }       
  62          // 设置写保护 
  63          void set_ds1302_WP(void) 
  64          {
  65   1              RST = 0;           // RST引脚既是CE引脚
  66   1              SCK = 0;
  67   1              RST = 1;
  68   1              write_ds1302_byte(0x8E);
  69   1              write_ds1302_byte(0x80);
  70   1              SDA = 0;
  71   1              RST = 0;
  72   1      } 
  73          
  74          // 连续写入8个寄存器数据，dat-待写入数据指针  
  75          void write_ds1302_nbyte(unsigned char *dat)
  76          {
  77   1          unsigned char i;
  78   1          RST=0;
  79   1              SCK=0;
  80   1          RST = 1;
  81   1          write_ds1302_byte(0xBE);  // 发送突发写寄存器指令
  82   1          for (i=0; i<8; i++)       // 连续写入8字节数据
  83   1          {
  84   2              write_ds1302_byte(dat[i]);
  85   2          }
  86   1          RST = 0;
  87   1      }
  88          // 设定时钟数据
  89          void set_time(unsigned char *timedata)
  90          {
  91   1              unsigned char i, tmp;
  92   1              for (i=0; i<7; i++)  // 转化为压缩BCD格式（一个字节存放2个BCD码）
  93   1              {
  94   2                      tmp = timedata[i] / 10;                 // 获取高位BCD码
  95   2                      timedata[i] = timedata[i] % 10;         // 获取低位BCD码
  96   2                      timedata[i] = timedata[i] + tmp*16;     // 合并成压缩BCD码
  97   2              }
  98   1              clear_ds1302_WP();                              // 清除写保护
  99   1              write_ds1302_nbyte(timedata);               // 连续写入8字节数据
 100   1              set_ds1302_WP();                                // 写保护
 101   1      }  
 102          
 103          // 读字节，低位在前，高位在后
 104          unsigned char read_ds1302_byte(void) 
 105          {
 106   1              unsigned char i, dat=0; 
 107   1              for (i=0;i<8;i++)
 108   1              {       
 109   2                      dat >>= 1;
 110   2                      if (SDA) dat |= 0x80;
 111   2                      SCK = 1;
 112   2                      SCK = 0;
 113   2              } 
 114   1              return dat;
 115   1      } 
 116          
C51 COMPILER V9.00   DS1302                                                                05/22/2016 16:17:24 PAGE 3   

 117          // 单字节压缩BCD码转换成ASCII码另一常见格式示例，dat/16 + 0x30，
 118          // dat/16本质就是右移4位，数字0--9加上0x30即得数字0--9的ASCII码
 119          void LCD12864_Send_TIME(unsigned char *tmp)
 120          {
 121   1              unsigned char str[19];           // 字符串转换缓冲区
 122   1              str[0] = '2';                    // 添加年份的高2位：20
 123   1          str[1] = '0';
 124   1          str[2] = (tmp[6] >> 4) + '0';    //“年”高位数字转换为ASCII码
 125   1          str[3] = (tmp[6]&0x0F) + '0';    //“年”低位数字转换为ASCII码
 126   1          str[4] = '-';  //添加日期分隔符
 127   1          str[5] = (tmp[4] >> 4) + '0';    //“月”
 128   1          str[6] = (tmp[4]&0x0F) + '0';
 129   1          str[7] = '-';
 130   1          str[8] = (tmp[3] >> 4) + '0';    //“日”
 131   1          str[9] = (tmp[3]&0x0F) + '0';
 132   1          //str[10] = '\0';                                    // 字符串结束符
 133   1              //UART_Send_Str(str);                            // 输出  年、月、日
 134   1              //UART_Send_Str("   ");
 135   1        
 136   1          str[10] = (tmp[2] >> 4) + '0';    //“时”
 137   1          str[11] = (tmp[2]&0x0F) + '0';
 138   1          str[12] = ':';  //添加时间分隔符
 139   1          str[13] = (tmp[1] >> 4) + '0';    //“分”
 140   1          str[14] = (tmp[1]&0x0F) + '0';
 141   1          str[15] = ':';
 142   1          str[16] = (tmp[0] >> 4) + '0';    //“秒”
 143   1          str[17] = (tmp[0]&0x0F) + '0';
 144   1          str[18] = '\0';
 145   1              Display_String(4,str);                    //LCD12864输出
 146   1      
 147   1          //UART_Send_Str(str);                // 输出  时、分、秒         
 148   1              //UART_Send_Str("   ");   
 149   1              
 150   1              /*UART_Send_Str("week = "); 
 151   1              str[0] = (tmp[5]&0x0F) + '0';    //“星期”
 152   1          str[1] = '\0'; 
 153   1              UART_Send_Str(str);                      // 输出  星期  
 154   1              UART_Send_Str("   ");*/ 
 155   1      }
 156          
 157          // 连续读取8个寄存器的数据//dat-读取数据的接收指针  
 158          void read_time()
 159          {
 160   1          unsigned char i;
 161   1              unsigned char TempData[8] = {0,0,0,0,0,0,0,0};
 162   1              //unsigned char TimeData[8] = {0,0,0,0,0,0,0,0};  
 163   1              RST=0;
 164   1              SCK=0;
 165   1          RST = 1;
 166   1          write_ds1302_byte(0xBF);  //发送突发读寄存器指令
 167   1          for (i=0; i<8; i++)     //连续读取8个字节
 168   1          {
 169   2              TempData[i] = read_ds1302_byte();
 170   2          }
 171   1          RST = 0;
 172   1              LCD12864_Send_TIME(TempData);
 173   1      } 
 174           
 175          void delay_1S(void)
 176          {
 177   1         unsigned char i,j,k;
 178   1         for(i=85;i>0;i--)      // 注意后面没分号
C51 COMPILER V9.00   DS1302                                                                05/22/2016 16:17:24 PAGE 4   

 179   1         for(j=254;j>0;j--)     // 注意后面没分号
 180   1         for(k=255;k>0;k--);    // 注意后面有分号
 181   1      }
 182          
 183          void port_mode()            // 端口模式
 184          {
 185   1              P0M1=0x00; P0M0=0x00;P1M1=0x00; P1M0=0x00;P2M1=0x00; P2M0=0x00;P3M1=0x00; P3M0=0x00;
 186   1              P4M1=0x00; P4M0=0x00;P5M1=0x00; P5M0=0x00;P6M1=0x00; P6M0=0x00;P7M1=0x00; P7M0=0x00; 
 187   1      }
 188          
 189          /*
 190           * DS1302初始化
 191           * 参数:时间数组StartTime[7]=   {14,11,30,23,50,59,7} 
 192           */
 193          void DS1302Init(unsigned char StartTime[7])    
 194          {
 195   1              //unsigned char StartTime[7]=   {14,11,30,23,50,59,7};  // 年月日时分秒周 14-11-30 23:50:59
 196   1              unsigned char time[8];                                                                  // 秒分时日月周年  
 197   1              Data_Swap(StartTime,time);                                                      // 数据交换
 198   1              set_time(time);                                                                         // 设定初始时间值 ,数组名就代表数组首地址               
 199   1              //read_time();                                                                  // 秒分时日月周年       
 200   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    775    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      47
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
